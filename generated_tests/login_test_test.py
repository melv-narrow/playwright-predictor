"""
Test the login functionality and other key features

Generated by AI Test Generator
Timestamp: 2025-01-02 18:38:13
"""

import pytest
from playwright.sync_api import Page, expect
import random
import string

@pytest.fixture
def test_user():
    """Test user credentials"""
    return {
        "email": "test_user_123@example.com",
        "password": "TestPassword123"
    }

@pytest.fixture
def random_user():
    """Generate random user data for registration"""
    random_str = ''.join(random.choices(string.ascii_lowercase, k=8))
    return {
        "name": f"Test User {random_str}",
        "email": f"test_{random_str}@example.com",
        "password": "TestPassword123",
        "first_name": "Test",
        "last_name": "User",
        "address": "123 Test St",
        "state": "Test State",
        "city": "Test City",
        "zipcode": "12345",
        "mobile": "1234567890"
    }

def test_login_success(page: Page, test_user):
    """Test successful login with valid credentials"""
    # Navigate to the login page
    page.goto("https://automationexercise.com/login")
    
    # Fill in login form
    page.fill("input[data-qa='login-email']", test_user["email"])
    page.fill("input[data-qa='login-password']", test_user["password"])
    
    # Click login button
    page.click("button[data-qa='login-button']")
    
    # Verify successful login
    expect(page.locator("li a:has-text('Logged in as')")).to_be_visible()
    expect(page.locator("a[href='/delete_account']")).to_be_visible()
    
    # Save success screenshot
    page.screenshot(path="test-results/login_success.png")

def test_register_new_user(page: Page, random_user):
    """Test new user registration process"""
    # Navigate to signup page
    page.goto("https://automationexercise.com/login")
    
    # Fill signup form
    page.fill("input[data-qa='signup-name']", random_user["name"])
    page.fill("input[data-qa='signup-email']", random_user["email"])
    page.click("button[data-qa='signup-button']")
    
    # Fill account details
    page.fill("input[data-qa='password']", random_user["password"])
    page.fill("input[data-qa='first_name']", random_user["first_name"])
    page.fill("input[data-qa='last_name']", random_user["last_name"])
    page.fill("input[data-qa='address']", random_user["address"])
    page.fill("input[data-qa='state']", random_user["state"])
    page.fill("input[data-qa='city']", random_user["city"])
    page.fill("input[data-qa='zipcode']", random_user["zipcode"])
    page.fill("input[data-qa='mobile_number']", random_user["mobile"])
    
    # Submit registration
    page.click("button[data-qa='create-account']")
    
    # Verify account created
    expect(page.locator("h2.title:has-text('Account Created!')")).to_be_visible()
    
    # Save screenshot
    page.screenshot(path="test-results/registration_success.png")

def test_product_search(page: Page):
    """Test product search functionality"""
    # Navigate to products page
    page.goto("https://automationexercise.com/products")
    
    # Search for a product
    page.fill("input#search_product", "dress")
    page.click("button#submit_search")
    
    # Verify search results
    expect(page.locator(".features_items")).to_be_visible()
    expect(page.locator(".single-products")).to_be_visible()
    
    # Save screenshot
    page.screenshot(path="test-results/search_results.png")

def test_add_to_cart(page: Page):
    """Test adding product to cart"""
    # Navigate to products page
    page.goto("https://automationexercise.com/products")
    
    # Add first product to cart
    page.hover(".single-products >> nth=0")
    page.click("a.add-to-cart >> nth=0")
    
    # View cart
    page.click("u:text('View Cart')")
    
    # Verify product in cart
    expect(page.locator("#cart_info")).to_be_visible()
    expect(page.locator(".cart_description")).to_be_visible()
    
    # Save screenshot
    page.screenshot(path="test-results/cart_added.png")

def test_contact_form(page: Page):
    """Test contact form submission"""
    # Navigate to contact page
    page.goto("https://automationexercise.com/contact_us")
    
    # Fill contact form
    page.fill("input[data-qa='name']", "Test User")
    page.fill("input[data-qa='email']", "test@example.com")
    page.fill("input[data-qa='subject']", "Test Subject")
    page.fill("textarea[data-qa='message']", "This is a test message")
    
    # Submit form
    page.click("input[data-qa='submit-button']")
    
    # Accept alert
    page.on("dialog", lambda dialog: dialog.accept())
    
    # Verify success
    expect(page.locator(".status.alert.alert-success")).to_be_visible()
    
    # Save screenshot
    page.screenshot(path="test-results/contact_success.png")