"""
Test to inspect Sliq Marketing website structure

Generated by AI Test Generator
Timestamp: 2025-01-02 19:10:10
"""

import re
import pytest
from playwright.sync_api import Page, expect

def test_inspect_structure(page: Page):
    """Inspect website structure and log key elements"""
    # Navigate to homepage
    page.goto("https://www.sliqmarketing.co.za/")
    
    # Wait for page load
    page.wait_for_load_state("networkidle")
    
    # Get page title
    print(f"\nPage Title: {page.title()}")
    
    # Log HTML structure
    print("\nPage Structure:")
    elements = page.locator("body *").all()
    for elem in elements[:20]:  # Limit to first 20 elements to avoid overwhelming output
        try:
            tag = elem.evaluate("el => el.tagName.toLowerCase()")
            id_attr = elem.get_attribute("id") or ""
            class_attr = elem.get_attribute("class") or ""
            print(f"- Tag: {tag} | ID: {id_attr} | Classes: {class_attr}")
        except:
            continue
    
    # Log navigation structure
    print("\nNavigation Structure:")
    nav_elements = page.locator("header nav, header a, header button").all()
    for elem in nav_elements:
        try:
            tag = elem.evaluate("el => el.tagName.toLowerCase()")
            text = elem.text_content().strip()
            if text:
                print(f"- {tag}: {text}")
        except:
            continue
    
    # Log form structure
    print("\nForm Structure:")
    form_elements = page.locator("form, input, textarea, button").all()
    for elem in form_elements:
        try:
            tag = elem.evaluate("el => el.tagName.toLowerCase()")
            type_attr = elem.get_attribute("type") or ""
            name_attr = elem.get_attribute("name") or ""
            print(f"- {tag} | Type: {type_attr} | Name: {name_attr}")
        except:
            continue
    
    # Take screenshots of key sections
    print("\nTaking screenshots...")
    page.screenshot(path="test-results/homepage_full.png", full_page=True)
    
    # Get viewport size
    viewport_size = page.viewport_size
    print(f"\nViewport size: {viewport_size}")
    
    # Print all links
    print("\nLinks on page:")
    links = page.locator("a").all()
    for link in links[:10]:  # Limit to first 10 links
        try:
            href = link.get_attribute("href") or ""
            text = link.text_content().strip()
            if text:
                print(f"- {text}: {href}")
        except:
            continue
    
    # Assert page loaded
    assert page.title() != ""
