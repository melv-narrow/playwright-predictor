{
  "language": "javascript",
  "code": "import { test as base } from '@playwright/test';  \nimport AxeBuilder from '@axe-core/playwright';  \n  \ntype AxeFixture = {  \n  makeAxeBuilder: () => AxeBuilder;  \n};  \n  \n// Extend base test by providing \"makeAxeBuilder\"  \n//  \n// This new \"test\" can be used in multiple test files, and each of them will get  \n// a consistently configured AxeBuilder instance.  \nexport const test = base.extend<AxeFixture>({  \n  makeAxeBuilder: async ({ page }, use, testInfo) => {  \n    const makeAxeBuilder = () => new AxeBuilder({ page })  \n        .withTags(['wcag2a', 'wcag2aa', 'wcag21a', 'wcag21aa'])  \n        .exclude('#commonly-reused-element-with-known-issue');  \n  \n    await use(makeAxeBuilder);  \n  }  \n});  \nexport { expect } from '@playwright/test';  \n\n\n\n// axe-test.js  \nconst base = require('@playwright/test');  \nconst AxeBuilder = require('@axe-core/playwright').default;  \n  \n// Extend base test by providing \"makeAxeBuilder\"  \n//  \n// This new \"test\" can be used in multiple test files, and each of them will get  \n// a consistently configured AxeBuilder instance.  \nexports.test = base.test.extend({  \n  makeAxeBuilder: async ({ page }, use, testInfo) => {  \n    const makeAxeBuilder = () => new AxeBuilder({ page })  \n        .withTags(['wcag2a', 'wcag2aa', 'wcag21a', 'wcag21aa'])  \n        .exclude('#commonly-reused-element-with-known-issue');  \n  \n    await use(makeAxeBuilder);  \n  }  \n});  \nexports.expect = base.expect;",
  "context": "axe-test.ts",
  "source_url": "https://playwright.dev/docs/accessibility-testing",
  "pattern": "fixture"
}