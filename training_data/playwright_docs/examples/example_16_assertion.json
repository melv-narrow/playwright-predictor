{
  "language": "javascript",
  "code": "test('context request will share cookie storage with its browser context', async ({  \n  page,  \n  context,  \n}) => {  \n  await context.route('https://www.github.com/', async route => {  \n    // Send an API request that shares cookie storage with the browser context.  \n    const response = await context.request.fetch(route.request());  \n    const responseHeaders = response.headers();  \n  \n    // The response will have 'Set-Cookie' header.  \n    const responseCookies = new Map(responseHeaders['set-cookie']  \n        .split('\\n')  \n        .map(c => c.split(';', 2)[0].split('=')));  \n    // The response will have 3 cookies in 'Set-Cookie' header.  \n    expect(responseCookies.size).toBe(3);  \n    const contextCookies = await context.cookies();  \n    // The browser context will already contain all the cookies from the API response.  \n    expect(new Map(contextCookies.map(({ name, value }) =>  \n      [name, value])  \n    )).toEqual(responseCookies);  \n  \n    await route.fulfill({  \n      response,  \n      headers: { ...responseHeaders, foo: 'bar' },  \n    });  \n  });  \n  await page.goto('https://www.github.com/');  \n});",
  "context": "The main difference is that [APIRequestContext](/docs/api/class-apirequestcontext \"APIRequestContext\") accessible via [browserContext.request](/docs/api/class-browsercontext#browser-context-request) and [page.request](/docs/api/class-page#page-request) will populate request's `Cookie` header from the browser context and will automatically update browser cookies if [APIResponse](/docs/api/class-apiresponse \"APIResponse\") has `Set-Cookie` header:",
  "source_url": "https://playwright.dev/docs/api-testing",
  "pattern": "assertion"
}