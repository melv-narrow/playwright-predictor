"""
Test suite for Sauce Demo Website

Generated by AI Test Generator
Timestamp: {{ timestamp }}
"""

import pytest
from playwright.sync_api import Page, expect, TimeoutError

# Configure timeout for slow connections
TIMEOUT = 10000  # 10 seconds

@pytest.fixture
def login(page: Page):
    """Login fixture for authenticated tests"""
    page.goto("https://www.saucedemo.com/")
    page.wait_for_load_state("networkidle")
    
    # Login with standard user
    username = page.get_by_role("textbox", name="Username")
    password = page.get_by_role("textbox", name="Password")
    login_button = page.get_by_role("button", name="Login")
    
    expect(username).to_be_visible(timeout=TIMEOUT)
    expect(password).to_be_visible(timeout=TIMEOUT)
    
    username.fill("standard_user")
    password.fill("secret_sauce")
    login_button.click()
    
    # Wait for products page
    expect(page).to_have_url("https://www.saucedemo.com/inventory.html")

def test_login_page(page: Page):
    """Test login functionality"""
    page.goto("https://www.saucedemo.com/")
    page.wait_for_load_state("networkidle")
    
    # Test invalid login
    username = page.get_by_role("textbox", name="Username")
    password = page.get_by_role("textbox", name="Password")
    login_button = page.get_by_role("button", name="Login")
    
    expect(username).to_be_visible(timeout=TIMEOUT)
    expect(password).to_be_visible(timeout=TIMEOUT)
    
    username.fill("invalid_user")
    password.fill("invalid_pass")
    login_button.click()
    
    # Verify error message
    error = page.locator("[data-test='error']")
    expect(error).to_be_visible(timeout=TIMEOUT)
    
    page.screenshot(path="test-results/sauce_demo_login.png")

def test_product_sorting(page: Page, login):
    """Test product sorting functionality"""
    # Test different sort options
    sort_dropdown = page.locator("[data-test='product_sort_container']")
    expect(sort_dropdown).to_be_visible(timeout=TIMEOUT)
    
    # Test price high to low
    sort_dropdown.select_option("hilo")
    page.wait_for_timeout(1000)  # Wait for sort animation
    
    # Test price low to high
    sort_dropdown.select_option("lohi")
    page.wait_for_timeout(1000)
    
    # Test name A to Z
    sort_dropdown.select_option("az")
    page.wait_for_timeout(1000)
    
    # Test name Z to A
    sort_dropdown.select_option("za")
    page.wait_for_timeout(1000)
    
    page.screenshot(path="test-results/sauce_demo_sorting.png")

def test_shopping_cart(page: Page, login):
    """Test shopping cart functionality"""
    # Add items to cart
    add_to_cart = page.locator("[data-test='add-to-cart-sauce-labs-backpack']")
    expect(add_to_cart).to_be_visible(timeout=TIMEOUT)
    add_to_cart.click()
    
    # Verify cart badge
    cart_badge = page.locator(".shopping_cart_badge")
    expect(cart_badge).to_be_visible(timeout=TIMEOUT)
    expect(cart_badge).to_have_text("1")
    
    # Go to cart
    cart_link = page.locator(".shopping_cart_link")
    cart_link.click()
    page.wait_for_url("**/cart.html")
    
    # Verify item in cart
    cart_item = page.locator(".cart_item")
    expect(cart_item).to_be_visible(timeout=TIMEOUT)
    
    page.screenshot(path="test-results/sauce_demo_cart.png")

def test_checkout_process(page: Page, login):
    """Test checkout process"""
    # Add item to cart
    add_to_cart = page.locator("[data-test='add-to-cart-sauce-labs-backpack']")
    add_to_cart.click()
    
    # Go to cart
    cart_link = page.locator(".shopping_cart_link")
    cart_link.click()
    
    # Start checkout
    checkout_button = page.locator("[data-test='checkout']")
    expect(checkout_button).to_be_visible(timeout=TIMEOUT)
    checkout_button.click()
    
    # Fill checkout information
    firstname = page.locator("[data-test='firstName']")
    lastname = page.locator("[data-test='lastName']")
    postal = page.locator("[data-test='postalCode']")
    
    expect(firstname).to_be_visible(timeout=TIMEOUT)
    expect(lastname).to_be_visible(timeout=TIMEOUT)
    expect(postal).to_be_visible(timeout=TIMEOUT)
    
    firstname.fill("John")
    lastname.fill("Doe")
    postal.fill("12345")
    
    # Continue to overview
    continue_button = page.locator("[data-test='continue']")
    continue_button.click()
    
    # Complete checkout
    finish_button = page.locator("[data-test='finish']")
    expect(finish_button).to_be_visible(timeout=TIMEOUT)
    finish_button.click()
    
    # Verify success message
    complete_header = page.locator(".complete-header")
    expect(complete_header).to_be_visible(timeout=TIMEOUT)
    expect(complete_header).to_have_text("Thank you for your order!")
    
    page.screenshot(path="test-results/sauce_demo_checkout.png")

def test_product_details(page: Page, login):
    """Test product details page"""
    # Click on a product
    product_link = page.locator(".inventory_item_name").first
    expect(product_link).to_be_visible(timeout=TIMEOUT)
    product_link.click()
    
    # Verify product details
    product_name = page.locator(".inventory_details_name")
    product_price = page.locator(".inventory_details_price")
    product_desc = page.locator(".inventory_details_desc")
    
    expect(product_name).to_be_visible(timeout=TIMEOUT)
    expect(product_price).to_be_visible(timeout=TIMEOUT)
    expect(product_desc).to_be_visible(timeout=TIMEOUT)
    
    # Add to cart from details page
    add_to_cart = page.locator("[data-test^='add-to-cart']")
    expect(add_to_cart).to_be_visible(timeout=TIMEOUT)
    add_to_cart.click()
    
    page.screenshot(path="test-results/sauce_demo_product_details.png")
